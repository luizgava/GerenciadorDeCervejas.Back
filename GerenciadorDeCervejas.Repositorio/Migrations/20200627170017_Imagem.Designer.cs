// <auto-generated />
using System;
using GerenciadorDeCervejas.Repositorio.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace GerenciadorDeCervejas.Repositorio.Migrations
{
    [DbContext(typeof(ContextoBanco))]
    [Migration("20200627170017_Imagem")]
    partial class Imagem
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("GerenciadorDeCervejas.Dominio.Cervejas.Cerveja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnName("cor")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnName("dataalteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("datacriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("descricao")
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Harmonizacao")
                        .IsRequired()
                        .HasColumnName("harmonizacao")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Ingredientes")
                        .IsRequired()
                        .HasColumnName("ingredientes")
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Temperatura")
                        .IsRequired()
                        .HasColumnName("temperatura")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("TeorAlcoolico")
                        .IsRequired()
                        .HasColumnName("teoralcoolico")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("cervejas");
                });

            modelBuilder.Entity("GerenciadorDeCervejas.Dominio.Cervejas.Imagem.CervejaImagem", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("integer");

                    b.Property<byte[]>("Bytes")
                        .IsRequired()
                        .HasColumnName("bytes")
                        .HasColumnType("bytea");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnName("contenttype")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnName("dataalteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("datacriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasColumnName("nomearquivo")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("cervejas_imagens");
                });

            modelBuilder.Entity("GerenciadorDeCervejas.Dominio.Cervejas.Imagem.CervejaImagem", b =>
                {
                    b.HasOne("GerenciadorDeCervejas.Dominio.Cervejas.Cerveja", "Cerveja")
                        .WithOne()
                        .HasForeignKey("GerenciadorDeCervejas.Dominio.Cervejas.Imagem.CervejaImagem", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
